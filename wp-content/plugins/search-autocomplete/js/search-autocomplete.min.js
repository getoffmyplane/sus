(function($) {
    $(function() {
        var options = $.extend({
            'fieldName': '#s',
            'maxRows': 10,
            'minLength': 4
        }, SearchAutocomplete);

        options.fieldName = $('<div />').html(options.fieldName).text();

        $(options.fieldName).autocomplete({
            source: function( request, response ) {
                $.ajax({
                    url: options.ajaxurl,
                    dataType: "json",
                    data: {
                        action: 'autocompleteCallback',
                        term: this.term
                    },
                    success: function( data ) {
                        response( $.map( data.results, function( item ) {
                            return {
                                label: item.title,
                                value: item.title,
                                url: item.url
                            }
                        }));
                    },
                    error: function(jqXHR, textStatus, errorThrown) {
                        console.log(jqXHR, textStatus, errorThrown);
                    }
                });
            },
            delay: options.delay,
            minLength: options.minLength,
            autoFocus: ( options.autoFocus === 'true' ),
            search: function(event, ui) {
                $(event.currentTarget).addClass('sa_searching');
            },
            create: function() {
            },
            select: function( event, ui ) {
                if ( ui.item.url !== '#' ) {
                    /*
                     below command will follow the link in the search-autocomplete drop down when the user clicks on it.
                     We don't want that behaviour so commenting out.
                     */

                    //location = ui.item.url;
                    var name = ui.item.value;
                    var url = ui.item.url;
                    //alert(name + ' ' + url);

                    var post_id 	= $( this ).closest( ".postbox" ).attr( 'id' );
                    var resource_item 	= {
                        initialHTML: '<div class="resource-item"><div class="dashicons dashicons-menu wpdw-widget-sortable"></div><span class="resource-item-content" contenteditable="false">',
                        url: '<a class="wp-colorbox-iframe" href="'+ url +'">',
                        userInput: name,
                        closingHTML: '</a></span><div class="delete-item dashicons dashicons-no-alt"></div></div>',

                        combined: function () {
                            return this.initialHTML + this.url + this.userInput + this.closingHTML;
                        }
                    };

                    $( '#' + post_id + ' div.wp-dashboard-widget' ).append( resource_item.combined() );
                    $(".wp-colorbox-iframe").colorbox({iframe:true, width:"80%", height:"80%"});

                    // Pass resource name from widget to resource (JQuery -> PHP)
                    $( '.wp-dashboard-widget-wrap a' ).on('click', function(event) {

                        event.preventDefault();

                        //get resource url for isexistingresource or newresource comparison test
                        var resource_url = $ (this).attr('href');
                        //get resource name that user typed
                        var resource_name = $ (this).text();
                        //get widget id
                        var post_id 	= $( this ).closest( ".postbox" ).attr( 'id' );

                        //check if resource has not been linked to an existing resource already
                        //if ( resource_url == new_resource_url ) {
                        //post variables to PHP action
                        var data = {
                            action: 'post_title_return_url',
                            url: resource_url,
                            res_name: resource_name,
                            post_id: post_id
                        };

                        $.post( ajaxurl, data, function( response ) {
                            //alert('The server responded: ' + response);
                        });
                        //}
                    })

                    // Get resource name and url from php and update widget resource name (PHP -> JQuery)
                    $(document).on('cbox_closed', function() {

                        /*$( document.activeElement ).closest('div[class="postbox"]').block(
                         {
                         message: '<h1>processing...</h1>',
                         css: {border: '3px solid #a00'}
                         }
                         );*/

                        var set_data = {
                            action: 'resource_title_and_url_to_widget',
                            url: '',
                            resource_name: '',
                            post_id: ''
                        }

                        $.post(ajaxurl, set_data, function(response) {
                            var resource_att = $.parseJSON(response);
                            var url = resource_att.url;
                            var resource_name = resource_att.resource_name;

                            $( document.activeElement ).text(resource_name);
                            $( document.activeElement ).attr({
                                href: url
                            });
                            $( document.activeElement ).addClass('linked');

                            //$( this ).val( '' ); // Clear 'add item' field
                            $( document.activeElement ).trigger( 'widget-sortable' );
                            $( document.activeElement ).trigger( 'wpdw-update', this );
                        })

                        //$( document.activeElement ).closest('div[class="postbox"]').unblock();

                    })

                    $( this ).val( '' ); // Clear 'add item' field
                    $( this ).trigger( 'widget-sortable' );

                    $( this ).trigger( 'wpdw-update', this );

                } else {
                    return true;
                }
            },
            open: function(event, ui) {
                var acData = $(this).data('uiAutocomplete');
                acData
                    .menu
                    .element
                    .find('a')
                    .each(function () {
                        var $self = $( this ),
                            keywords = $.trim( acData.term ).split( ' ' ).join('|');
                        $self.html($self.text().replace(new RegExp("(" + keywords + ")", "gi"), '<span class="sa-found-text">$1</span>'));
                    });
                $(event.target).removeClass('sa_searching');
            },
            close: function() {
            }
        });
    });
})(jQuery);